// <auto-generated />
using System;
using Api.Infra.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Api.Infra.Database.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241230213005_File")]
    partial class File
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Api.Domain.UseCases.BusinessUnits.Models.BusinessUnit", b =>
                {
                    b.Property<int>("busId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("busName")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("varchar(120)");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("deletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("busId");

                    b.ToTable("business_unit");
                });

            modelBuilder.Entity("Api.Domain.UseCases.EquipmentFamilys.Models.EquipmentFamily", b =>
                {
                    b.Property<int>("eqFamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("deletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("eqFamName")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("varchar(120)");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("eqFamId");

                    b.ToTable("equipment_family");
                });

            modelBuilder.Entity("Api.Domain.UseCases.FilesMinios.Models.FileMinio", b =>
                {
                    b.Property<int>("FilMinId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("BucketName")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("varchar(120)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("varchar(120)");

                    b.Property<ulong>("FileSize")
                        .HasColumnType("bigint unsigned");

                    b.Property<string>("FileType")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("varchar(120)");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("deletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("FilMinId");

                    b.ToTable("file_minio");
                });

            modelBuilder.Entity("Api.Domain.UseCases.TypesChecklists.Models.TypesChecklist", b =>
                {
                    b.Property<int>("chTypId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("chTypName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("chTypStatus")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("deletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("chTypId");

                    b.ToTable("types_checklist");
                });

            modelBuilder.Entity("Api.Domain.UseCases.TypesEquipments.Models.TypesEquipment", b =>
                {
                    b.Property<int>("eqTypId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("deletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("eqTypName")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("varchar(120)");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("eqTypId");

                    b.ToTable("types_equipment");
                });
#pragma warning restore 612, 618
        }
    }
}
